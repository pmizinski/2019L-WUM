library(OpenML)
library(DALEX)
library(OpenML)
install.packages("OpenML")
library(OpenML)
library("OpenML", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:OpenML", unload=TRUE)
remove.packages("OpenML", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
install.packages("OpenML")
remove.packages("curl", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
install.packages("curl")
install.packages("curl")
install.packages("OpenML")
library(readr)
data_train <- read_csv("Desktop/data_train.csv")
View(data_train)
data<-data_train[1:100,]
library(dplyr)
View(data)
(3750901.5068+3770901.5068)/2
(-19268905.6133-19208905.6133)/2
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906))>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906))))
)
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906))>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906)))))
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906))>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906))))) ->tmp
View(tmp)
data$y_exit<- -19238906
data$x_exit<- 3760902
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906))>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906))))) ->tmp
View(tmp)
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906)))>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906)))) ->tmp
View(tmp)
data<-data_train[1:100,]
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906)))>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906)))) ->tmp
View(tmp)
data$y_exit<- -19238906
data$x_exit<- 3760902
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906)))>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906)))) ->tmp
View(tmp)
?dist()
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906)))) ->tmp
View(tmp)
data<-data_train[1:100,]
data %>% mutate(is_closer=dist(rbind(c(x_entry,y_entry),c(3760902,-19238906)))) ->tmp
View(tmp)
View(data)
mean(is.numeric(data_train$vmean))
is.numeric(data_train$vmean)
data_train$vmean
is.na(data_train$vmean)
mean(is.na(data_train$vmean) | data$vmean=="NaN")
data$vmean=="NaN"
mean(data$vmean=="NaN")
mean(data$vmean=="NaN",na.rm = TRUE)
mean(is.na(data_train$vmean))
mean(is.na(data_train$vmean))*mean(data$vmean=="NaN",na.rm = TRUE)
mean(data$vmean=="NaN",na.rm = TRUE)/mean(is.na(data_train$vmean))
#>dist(rbind(c(x_exit,y_exit),c(3760902,-19238906)))
mean(data$vmean=="NaN",na.rm = TRUE)
mean(is.na(data_train$vmean))
(1-mean(is.na(data_train$vmean)))*mean(data$vmean=="NaN",na.rm = TRUE)
(1-mean(is.na(data_train$vmax)))*mean(data$vmax=="NaN",na.rm = TRUE)
(1-mean(is.na(data_train$vmin)))*mean(data$vmin=="NaN",na.rm = TRUE)
setwd("~/Desktop/2019L-WUM/Zadania_domowe/Zadanie_domowe_6/Werner")
zbior<-read.csv("g2-2-100",header = FALSE,sep = " ")
zbior<-read.csv("g2-2-100.data",header = FALSE,sep = " ")
install.packages("cluster")
library("cluster")
library(ggplot2)
?kmeans()
etykiety<-read.csv("g2-2-100.labels",header = FALSE,sep = " ")
install.packages("mclust")
library("mclust")
zbior<-scale(zbior)
kmeans(zbior,2)
srednie<-kmeans(zbior,2)
srednie$withinss
najlepszy<-Mclust(zbior)
plot(najlepszy) # plot results
d <- dist(zbior, method = "euclidean") # distance matrix
summary(najlepszy)
zbior[[1]]
zbior[1]
zbior
zbior[:,1]
zbior[,1]
plot(zbior[,1],zbior[,2],col=etykiety$V1)
mclust::cross
install.packages("fpc")
?cluster.stats
plot(zbior[,1],zbior[,2],col=etykiety$V1)
?kmeans
install.packages("fpCompare")
library("adabag", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:adabag", unload=TRUE)
remove.packages("fpCompare", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
FM_index_R
install.packages("clues")
library(clues)
srednie$cluster
adjustedRand(srednie$cluster,etykiety$V1)
adjustedRand(srednie$cluster,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))
clusplot(zbior, srednie$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
clusplot(zbior, srednie$cluster, color=TRUE, shade=TRUE, lines=0)
ward <- hclust(d, method="ward")
ward <- hclust(d, method="ward.D2")
plot(ward) # display dendogram
groups <- cutree(ward, k=2) # cut tree into 5 clusters
clusplot(zbior, groups, color=TRUE, shade=TRUE, lines=0)
adjustedRand(groups,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))
adjustedRand(srednie$cluster,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))
?kmeans
lapply(2:5,function(x){srednia<-kmeans(zbior,x,nstart = 25);srednia$cluster})
ksrednie<-lapply(2:5,function(x){srednia<-kmeans(zbior,x,nstart = 25);srednia$cluster})
lapply(ksrednie, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
sapply(ksrednie, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
statystyki<-sapply(ksrednie, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
t(statystyki)
data.frame(t(statystyki))
knitr::opts_chunk$set(echo = TRUE)
library(cluster)
library(mclust)
library(ggplot2)
library(clues)
zbior<-read.csv("g2-2-100.data",header = FALSE,sep = " ")
etykiety<-read.csv("g2-2-100.labels",header = FALSE,sep = " ")
zbior<-scale(zbior)
d <- dist(zbior, method = "euclidean") # distance matrix
plot(zbior[,1],zbior[,2],col=etykiety$V1)
plot(zbior[,1],zbior[,2],col=etykiety$V1,xlab = "",ylab = "")
r
ward <- hclust(d, method="ward.D2")
ward<-lapply(2:5,function(x){srednia<-cutree(ward, k=2);srednia$cluster})
ward<-lapply(2:5,function(x){srednia<-cutree(ward, k=x)})
statystyki<-sapply(ward, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
ward<-data.frame(t(statystyki))
View(ward)
?cusplot
?clusplot
library(dplyr)
clusplot(zbior, srednie$cluster, color=TRUE, shade=TRUE, lines=0,main ="" )
clusplot(zbior, srednie$cluster, color=TRUE, shade=TRUE, lines=0,main ="",xlab = "",ylab = "" )
clusplot(zbior, srednie$cluster, color=TRUE, shade=TRUE, lines=0,main ="",xlab = "",ylab = "",sub = "" )
warnings()
install.packages("fpCompare")
knitr::opts_chunk$set(echo = TRUE)
library(cluster)
library(mclust)
library(ggplot2)
library(clues)
zbior<-read.csv("g2-2-100.data",header = FALSE,sep = " ")
etykiety<-read.csv("g2-2-100.labels",header = FALSE,sep = " ")
zbior<-scale(zbior)
d <- dist(zbior, method = "euclidean") # distance matrix
clusplot(zbior, etykiety$V1, color=TRUE, shade=TRUE, lines=0,main ="",xlab = "",ylab = "",sub = "" )
ksrednie<-lapply(2:5,function(x){srednia<-kmeans(zbior,x,nstart = 25);srednia$cluster})
statystyki<-sapply(ksrednie, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
ksrednie_stat<-data.frame(t(statystyki))
ward <- hclust(d, method="ward.D2")
ward<-lapply(2:5,function(x){srednia<-cutree(ward, k=x)})
statystyki<-sapply(ward, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
ward_stat<-data.frame(t(statystyki))
clusplot(zbior, ksrednie[[2]], color=TRUE, shade=TRUE, lines=0,main ="",xlab = "",ylab = "",sub = "" )
clusplot(zbior, ksrednie[[1]], color=TRUE, shade=TRUE, lines=0,main ="",xlab = "",ylab = "",sub = "" )
clusplot(zbior, ksrednie[[1]], color=TRUE, shade=TRUE, lines=0,main ="K-srednie",xlab = "",ylab = "",sub = "" )
clusplot(zbior, ward[[1]], color=TRUE, shade=TRUE, lines=0,main ="Ward",xlab = "",ylab = "",sub = "" )
clusplot(zbior, ksrednie[[1]], color=TRUE, shade=TRUE, lines=0,main ="K-srednie",xlab = "",ylab = "",sub = "" )
ksrednie_stat$metoda<-"k-srednie"
ward_stat$metoda<-"Ward"
library(tidyverse)
?tidyverse::gather
install.packages("reshape2")
library(reshape2)
reshape2::melt(ward_stat,id.vars="Rand")
reshape2::melt(ward_stat)
knitr::opts_chunk$set(echo = TRUE)
library(cluster)
library(mclust)
library(ggplot2)
library(clues)
library(reshape2)
zbior<-read.csv("g2-2-100.data",header = FALSE,sep = " ")
etykiety<-read.csv("g2-2-100.labels",header = FALSE,sep = " ")
zbior<-scale(zbior)
d <- dist(zbior, method = "euclidean") # distance matrix
ksrednie_stat<-melt(ksrednie_stat)
ward_stat<-melt(ward_stat)
stat<-rbind(ksrednie_stat,ward_stat)
View(stat)
stat$metoda<-as.factor(stat$metoda)
View(stat)
ksrednie<-lapply(2:5,function(x){srednia<-kmeans(zbior,x,nstart = 25);srednia$cluster})
statystyki<-sapply(ksrednie, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
ksrednie_stat<-data.frame(t(statystyki))
ward <- hclust(d, method="ward.D2")
statystyki<-sapply(ward, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
ward<-lapply(2:5,function(x){srednia<-cutree(ward, k=x)})
statystyki<-sapply(ward, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
ward_stat<-data.frame(t(statystyki))
View(ward_stat)
ksrednie_stat$metoda<-"k-srednie"
ward_stat$metoda<-"Ward"
ksrednie_stat$liczba_klastrow<-2:5
ward_stat$liczba_klastrow<-2:5
ksrednie_stat<-melt(ksrednie_stat)
View(ksrednie_stat)
ksrednie<-lapply(2:5,function(x){srednia<-kmeans(zbior,x,nstart = 25);srednia$cluster})
statystyki<-sapply(ksrednie, function(x){adjustedRand(x,etykiety$V1,c("Rand", "HA", "FM", "Jaccard"))})
ksrednie_stat<-data.frame(t(statystyki))
ksrednie_stat$metoda<-"k-srednie"
ward_stat$metoda<-"Ward"
ksrednie_stat$liczba_klastrow<-2:5
ward_stat$liczba_klastrow<-2:5
melt(ksrednie_stat,id.vars = c("metoda","liczba_klastrow"))
ksrednie_stat<-melt(ksrednie_stat,id.vars = c("metoda","liczba_klastrow"))
ward_stat<-melt(ward_stat,id.vars = c("metoda","liczba_klastrow"))
stat<-rbind(ksrednie_stat,ward_stat)
stat$metoda<-as.factor(stat$metoda)
ggplot(data = stat,aes(x=liczba_klastrow,y=value,color=metoda,group=variable))+geom_path()
ggplot(data = stat,aes(x=liczba_klastrow,y=value,color=metoda,group=variable))+geom_path()+facet_grid(. ~ variable)
ggplot(data = stat,aes(x=liczba_klastrow,y=value,color=metoda,group=variable))+geom_line()+facet_grid(. ~ variable)
ggplot(data = stat,aes(x=liczba_klastrow,y=value,color=metoda,group=metoda))+geom_line()+facet_grid(. ~ variable)
